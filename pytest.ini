[pytest]
# pytest markers for segregating tests
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    wip: work in progress
    smoke: Smoke shows the app still works and is in testable condition\
            - assumes acceptance is manual
    L0: also smoke, decide which to use
    L1: Regression Level 1 must have for regression
    L2: Regression Level 2 we want to get to
    L3: Regression Level3 nice to have
    blocked: use to block tests while you work on them
    setup: and teardown are for before and after test runs
    teardown: and setup are for before and after test runs
    greg: specifically for me


# Live logging to terminal and file, only message & CRITICAL level in terminal,\
        fancy output in pytest.log file
# source: https://stackoverflow.com/questions/4673373/logging-within-pytest-tests
# turn on/off console logging
# or command line use:  pytest -o log_cli=true
log_cli = 1

# DEBUG, info, warning, error, critical
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(message)75s %(filename)45s:%(lineno)3s
log_cli_date_format=%Y-%m-%d %H:%M:%S


# redefined with timestamp in conftest.py
log_file = logs/base_pytest.log

# DEBUG, info, warning, error, critical
log_file_level = DEBUG
log_file_format = %(asctime)s [%(levelname)8s] %(message)75s %(filename)45s:%(lineno)3s
log_file_date_format=%Y-%m-%d %H:%M:%S

